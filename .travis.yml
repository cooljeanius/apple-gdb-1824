language: c
dist: xenial

os:
  - linux
  # (maybe also osx, but that will require converting all of the apt packages...)

before_install:
  - "sudo apt-get update"

install:
  # Prerequisites
  - "sudo apt-get install autogen gobjc gobjc++ gobjc-multilib gobjc++-multilib libopts25 libopts25-dev texinfo flex flex-doc pax libcurses-perl dejagnu expect libexpect-perl guile-1.8 guile-1.8-dev guile-1.8-libs tcl-tclreadline m4 xutils-dev libgcj-common ecj-gcj gfortran gfortran-multilib gccgo gccgo-multilib libdmalloc-dev libdmalloc5 gnulib fastjar gcj-jre gcj-jdk autopoint gperf help2man libextutils-f77-perl texlive-base texlive-latex-base texlive-generic-recommended"

# set up env
before_script: test -e ./.profile.d/.profile_generic && source ./.profile.d/.profile_generic

# try to build
script:
  - cd src && ./configure --with-x --disable-werror --disable-opts-test --enable-64-bit-bfd --enable-silent-rules --with-system-zlib
  - make configure-bfd
  # FIXME: these next steps are hacks. The dependency handling in the Makefiles should be fixed to do this properly instead. 
  - make -C bfd headers
  - if test ! -e bfd/bfd.h; then make -C bfd bfd.h; else stat bfd/bfd.h; fi
  # Just skip the directories that are broken:
  - if test -e autogen/Makefile; then make -C autogen; elif test -d autogen; then ls autogen/Makefile*; else echo "skipping autogen"; fi
  - make -C bfd diststuff
  - make all-cgen
  - make all-libiberty
  - make all-intl
  - make all-electric-fence
  - make all-etc
  - make all-libdecnumber
  - make all-mmalloc
  - make configure-readline
  - for dir in libtool_gnu sim utils tcl expect dejagnu itcl tk libgui; do if test -e ${dir}/configure; then make configure-${dir}; elif test -d ${dir}; then ls ${dir}/configure*; else echo "skipping configuring in ${dir}"; fi; done
  - for dir in sim utils tcl expect dejagnu itcl tk libgui; do if test -e ${dir}/Makefile; then make -C ${dir}; elif test -d ${dir}; then ls ${dir}/Makefile*; else echo "skipping ${dir}"; fi; done
  - make check-libiberty
  - for dir in sim itcl; do if test -e ${dir}/Makefile; then make check-${dir} V=0 RUNTESTFLAGS="-v"; elif test -d ${dir}; then ls ${dir}/Makefile*; else echo "skipping testing ${dir}"; fi; done

compiler:
  - clang
  - gcc

after_success: pwd
after_failure: find . -name config.log | xargs cat | grep -i error | sort | uniq
