# Makefile for xcode part of gdb.apple part of testsuite

VPATH = @srcdir@
srcdir = @srcdir@
top_srcdir = @top_srcdir@

SUBDIRS = @subdirs@

EXECUTABLES = callfuncs inf-call-interrupt-notsleep structs

all:
	@echo "Nothing to be done for all in `pwd`..."

info:
install-info:
dvi:
install:
uninstall: force
installcheck:
check:

# 'rm -f' gets the '-v' flag here when the files that it removes can vary:
clean mostlyclean:
	-rm -fv *~ core *.o *.dylib
	-rm -fv $(EXECUTABLES)
	if [ x"${SUBDIRS}" != x"" -a x"${SUBDIRS}" != x"." ]; then \
	  for dir in ${SUBDIRS}; do \
	    echo "target $@ in `pwd`: trying to recurse into $${dir}:"; \
	    if [ -d $${dir} -a -r $${dir}/Makefile -a "$${dir}" != "." -a -e $${dir}/configure ]; then \
	      (cd $${dir}; $(MAKE) clean); \
	    else echo "$@: skipping subdir $${dir} here (in `pwd`)..."; \
	    fi; \
	  done; \
	else echo "`pwd`: no subdirs to recurse into for target '$@'"; fi

distclean maintainer-clean realclean: clean
	-rm -f Makefile config.status config.log
	-rm -fv *-init.exp
	-rm -frv *.log summary detail *.plog *.sum *.psum site.*
	if [ x"${SUBDIRS}" != x"" -a x"${SUBDIRS}" != x"." ]; then \
	  for dir in ${SUBDIRS}; do \
	    echo "target $@ in `pwd`: trying to recurse into $${dir}:"; \
	    if [ -d $${dir} -a -r $${dir}/Makefile -a "$${dir}" != "." -a -e $${dir}/configure ]; then \
	      (cd $${dir}; $(MAKE) distclean); \
	    elif [ -d $${dir} -a -w $${dir} -a "$${dir}" != "." -a -w . ]; then \
	      rm -rfv $${dir} || rmdir $${dir}; \
	    else echo "$@: skipping subdir $${dir} here (in `pwd`)..."; \
	    fi; \
	  done; \
	else echo "`pwd`: no subdirs to recurse into for target '$@'"; fi
	if test -w . && test -e `pwd`/Makefile; then rm -f `pwd`/Makefile; fi

$(top_srcdir)/config.status: $(top_srcdir)/configure
	if test -d "$(top_srcdir)"; then cd $(top_srcdir); \
	elif test "x$(top_srcdir)" != "x.." && test -d..; then cd ..; \
	else echo "target for $@: staying in `pwd` for now..."; fi
	if test ! -e config.status || test config.status -ot configure; then \
	  if test -x ./configure; then \
	    ./configure; \
	  elif test -x $(top_srcdir)/configure; then \
	    $(top_srcdir)/configure; \
	  fi; \
	fi

Makefile: $(srcdir)/Makefile.in $(top_srcdir)/config.status
	echo "$@ target: now in `pwd`"
	if test -r $(top_srcdir)/config.status && test -r ./configure && test -d . && test -r $(top_srcdir)/configure; then \
	  $(SHELL) $(top_srcdir)/config.status --recheck; \
	elif test -x ./config.status && test -x ./configure; then \
	  ./config.status --recheck; \
	else \
	  touch Makefile; \
	fi
