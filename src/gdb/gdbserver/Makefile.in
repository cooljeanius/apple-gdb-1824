# Copyright 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998,
# 1999, 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.

# This file is part of GDB.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place: Suite 330, Boston, MA 02111-1307, USA.

ACLOCAL_AMFLAGS = -I../m4 --install

prefix = @prefix@
exec_prefix = @exec_prefix@

host_alias = @host_alias@
target_alias = @target_alias@
program_transform_name = @program_transform_name@
bindir = @bindir@
libdir = @libdir@
tooldir = $(libdir)/$(target_alias)

datadir = @datadir@
datarootdir = @datarootdir@
mandir = @mandir@
man1dir = $(mandir)/man1
man2dir = $(mandir)/man2
man3dir = $(mandir)/man3
man4dir = $(mandir)/man4
man5dir = $(mandir)/man5
man6dir = $(mandir)/man6
man7dir = $(mandir)/man7
man8dir = $(mandir)/man8
man9dir = $(mandir)/man9
infodir = @infodir@
htmldir = $(prefix)/html
includedir = @includedir@

SHELL = /bin/sh
CONFIGURED_SHELL = @SHELL@
EXEEXT = @EXEEXT@

RUN_MKINSTALLDIRS = $(SHELL) $(srcdir)/../../mkinstalldirs
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
RANLIB = @RANLIB@
SED = @SED@
GREP = @GREP@

HOST_ARCHITECTURE = @HOST_ARCHITECTURE@
TARGET_ARCHITECTURE = @TARGET_ARCHITECTURE@

# The name of the compiler to use:
COMPILER = @COMPILER@

# The name of the linker to use:
LINKER = @LINKER@

# These are for use with the automake-style verbosity control below:
AM_V_COMPILER = @AM_V_COMPILER@
AM_V_LINKER = @AM_V_LINKER@

CC = @CC@
CXX = @CXX@

NM = @NM@
NM_INTERFACE = @NM_INTERFACE@
PARSE_NM_OUTPUT_CMD_ONE = @gdb_cv_sys_global_symbol_pipe@
PARSE_NM_OUTPUT_CMD_TWO = @gdb_cv_sys_global_symbol_to_cdecl@
PARSE_NM_OUTPUT_CMD_THREE = @gdb_cv_sys_global_symbol_to_c_name_address@
PARSE_NM_OUTPUT_CMD_FOUR = @gdb_cv_sys_global_symbol_to_c_name_address_lib_prefix@

# Dependency tracking information.
depcomp = $(SHELL) $(srcdir)/../depcomp

# Note that these are overridden by GNU make-specific code below if
# GNU make is used.  The overrides implement dependency tracking.
COMPILE.pre = $(COMPILER)
COMPILE.post = $(CPPFLAGS) -c -o $@
COMPILE = $(AM_V_COMPILER)$(COMPILE.pre) $(INTERNAL_CFLAGS) $(COMPILE.post)
POSTCOMPILE = @echo "Used $(COMPILER) to compile $< into $@."

# Directory containing source files.  Do NOT clean up the spacing,
# this exact string is matched for by the "configure" script.
srcdir = @srcdir@
abs_top_srcdir=@abs_top_srcdir@
abs_srcdir=@abs_srcdir@
VPATH = @srcdir@

# It is also possible that you will need to add -Wp,-I/usr/include/sys to the
# CFLAGS section if your system does NOT have fcntl.h in /usr/include
# (which is where it should be according to Posix).

# Set this up with gcc if you have gnu ld and the loader will print out
# line numbers for undefinded refs.
CC_LD_STATIC="gcc -static"
CC_LD=${CC}
CXX_LD=${CXX}
COMPILER_LD=${COMPILER}

# Where is the "include" directory?  Traditionally ../include or ./include
INCLUDE_DIR =  ${srcdir}/../../include
INCLUDE_DEP = $$(INCLUDE_DIR)

# gnulib
GNULIB_BUILDDIR = ../gnulib
LIBGNU = $(GNULIB_BUILDDIR)/import/libgnu.a
INCGNU = -Wp,-I$(srcdir)/../gnulib -Wp,-I$(srcdir)/../gnulib/import \
  -Wp,-I$(GNULIB_BUILDDIR)/import
GNULIB_CFLAGS = -Wp,-I$(srcdir)/../gnulib -Wp,-I$(GNULIB_BUILDDIR)/gnulib \
  -Wp,-I$(GNULIB_BUILDDIR)/import
GNULIB_LIB = $(GNULIB_BUILDDIR)/import/libgnu.a

# Generated headers in the gnulib directory. These must be listed
# so that they are generated before other files are compiled.
GNULIB_H = $(GNULIB_BUILDDIR)/import/string.h @GNULIB_STDINT_H@

# Where is the BFD library? Typically in ../../bfd:
BFD_DIR = ../../bfd
BFD = $(BFD_DIR)/libbfd.a
BFD_SRC = $(srcdir)/$(BFD_DIR)
BFD_CFLAGS = -Wp,-I$(BFD_DIR) -Wp,-I$(BFD_SRC)

# Where is the "-liberty" library?  Typically in ../libiberty.
LIBIBERTY_DIR = $(srcdir)/../../libiberty
LIBIBERTY_DEP = $(LIBIBERTY_DIR)/libiberty.a
LIBIBERTY = -L$(LIBIBERTY_DIR) -liberty
LIBIBERTY_CFLAGS = -Wp,-I$(LIBIBERTY_DIR)

# Where is the srcdir for the READLINE library? Traditionally in .. or .
# (For the binary library built from it, we use ${READLINE_DIR}${subdir}.)
READLINE_DIR = ${srcdir}/../readline
READLINE_DEP = $$(READLINE_DIR)

# Where are the regformat files? Typically in $(srcdir)/../regformats:
regformat_dir = $(srcdir)/../regformats

## automake-style verbosity control:
V = @V@
AM_V_v = $(am__v_v_@AM_V@)
am__v_v_ = $(am__v_v_@AM_DEFAULT_V@)
am__v_v_0 =
am__v_v_1 = -v

AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 

AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 

AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 

AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 

AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX      " $@;
am__v_CXX_1 = 

AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD    " $@;
am__v_CXXLD_1 = 

# All the includes used for CFLAGS and for lint.
# -Wp,-I. for config files.
# -Wp,-I${srcdir} for our headers.
# -Wp,-I$(regformat_dir) for regdef.h.
#
# We do not include ../target or ../nat in here because headers
# in those directories should be included with the subdirectory.
# e.g.: "target/wait.h".
#
# APPLE LOCAL: I want to share some of the register definition
# and mach stuff with regular gdb. So I am adding another
# platform include directory to get this stuff.
PLATFORM_INCLUDE = @GDBSERVER_PLATFORM_INCLUDE@
INCLUDE_CFLAGS = -Wp,-I. -Wp,-I.. -Wp,-I../common -Wp,-I${srcdir} \
	 -Wp,-I$(srcdir)/../common -Wp,-I$(regformat_dir) -Wp,-I$(srcdir)/.. \
	 $(PLATFORM_INCLUDE) -Wp,-I$(INCLUDE_DIR) $(INCGNU) $(GNULIB_CFLAGS)

# M{H,T}_CFLAGS, if defined, has host- and target-dependent CFLAGS
# from the config/ directory.
GLOBAL_CFLAGS = ${MT_CFLAGS} ${MH_CFLAGS}
PROFILE_CFLAGS = @PROFILE_CFLAGS@
HARDCODED_PROFILE_CFLAGS = -pg

# Warnings:
WARN_CFLAGS = -Wall -Wno-unused -Wextra -Wimplicit -std=gnu99
WARN_CXXFLAGS = -Wall -Wabi -Wno-unused -Wextra -Wundef -Wno-long-long \
  -fpermissive
CONFIGURED_WARN_CFLAGS = @WARN_CFLAGS@
WARN_CFLAGS_NO_FORMAT = `echo " $(CONFIGURED_WARN_CFLAGS) " \
	 | $(SED) "s/ -Wformat-nonliteral / -Wno-format-nonliteral /g"`

# archflags:
C_ARCHFLAGS = @C_ARCHFLAGS@

# CFLAGS is specifically reserved for setting from the command line
# when running make.  E.G.  "make CFLAGS=-Wmissing-prototypes".
CFLAGS = @CFLAGS@
# (configure script should have already put archflags into CFLAGS itself)

# CPPFLAGS is specifically reserved for setting from the command line
# when running make.  E.G.  "make CPPFLAGS=-Wp,-I.".
CPPFLAGS = @CPPFLAGS@ -DHAVE_CONFIG_H
DEFS = -DGDBSERVER
CONFIGURED_DEFS = @DEFS@
INTERNAL_DEFS = $(CONFIGURED_DEFS) $(DEFS)

# INTERNAL_CFLAGS is the aggregate of all other *CFLAGS macros.
INTERNAL_CFLAGS_BASE = ${CFLAGS} ${GLOBAL_CFLAGS} \
	${PROFILE_CFLAGS} ${INCLUDE_CFLAGS}
INTERNAL_WARN_CFLAGS = ${INTERNAL_CFLAGS_BASE} @WARN_COMPILER_FLAGS@ $(CONFIGURED_WARN_CFLAGS)
INTERNAL_CFLAGS = ${INTERNAL_WARN_CFLAGS} ${BFD_CFLAGS} $(INTERNAL_DEFS)

# LDFLAGS is specifically reserved for setting from the command line
# when running make.
LDFLAGS = @LDFLAGS@
INTERNAL_LDFLAGS = $(LDFLAGS) @RDYNAMIC@ $(C_ARCHFLAGS)

# Perhaps should come from parent Makefile
VERSION = gdbserver-4.12.3
DIST=gdb

LINT=/usr/5bin/lint
LINTFLAGS= $(BFD_CFLAGS)

# All source files that go into linking GDB remote server.

SFILES=	$(srcdir)/gdbreplay.c $(srcdir)/inferiors.c $(srcdir)/dll.c \
	$(srcdir)/mem-break.c $(srcdir)/proc-service.c \
	$(srcdir)/proc-service.list $(srcdir)/regcache.c \
	$(srcdir)/remote-utils.c $(srcdir)/server.c $(srcdir)/target.c \
	$(srcdir)/thread-db.c $(srcdir)/utils.c $(srcdir)/debug.c \
	$(srcdir)/linux-arm-low.c $(srcdir)/linux-bfin-low.c \
	$(srcdir)/linux-cris-low.c $(srcdir)/linux-crisv32-low.c \
	$(srcdir)/linux-i386-low.c \
	$(srcdir)/i386-low.c $(srcdir)/i387-fp.c \
	$(srcdir)/linux-ia64-low.c $(srcdir)/linux-low.c \
	$(srcdir)/linux-m32r-low.c \
	$(srcdir)/linux-m68k-low.c $(srcdir)/linux-mips-low.c \
	$(srcdir)/linux-nios2-low.c \
	$(srcdir)/linux-ppc-low.c $(srcdir)/linux-ppc64-low.c \
	$(srcdir)/linux-s390-low.c \
	$(srcdir)/linux-sh-low.c $(srcdir)/linux-sparc-low.c \
	$(srcdir)/linux-x86-64-low.c \
	$(srcdir)/linux-xtensa-low.c \
	$(srcdir)/linux-tile-low.c \
	$(srcdir)/win32-arm-low.c $(srcdir)/win32-i386-low.c \
	$(srcdir)/win32-low.c $(srcdir)/wincecompat.c \
	$(srcdir)/hostio.c $(srcdir)/hostio-errno.c \
	$(srcdir)/common/vec.c $(srcdir)/common/gdb_vecs.c \
	$(srcdir)/common/common-utils.c $(srcdir)/common/xml-utils.c \
	$(srcdir)/common/linux-osdata.c $(srcdir)/common/ptid.c \
	$(srcdir)/common/buffer.c $(srcdir)/common/linux-btrace.c \
	$(srcdir)/common/filestuff.c $(srcdir)/target/waitstatus.c \
	$(srcdir)/common/mips-linux-watch.c \
	$(srcdir)/common/print-utils.c \
	$(srcdir)/common/rsp-low.c \
 	$(srcdir)/macosx-low.c $(srcdir)/macosx-excthread.c \
 	$(srcdir)/macosx-ppc-low.c $(srcdir)/macosx-threads.c \
 	$(srcdir)/macosx-mutils.c $(srcdir)/macosx-i386-low.c

DEPFILES = @GDBSERVER_DEPFILES@

LIBOBJS = @LIBOBJS@

SOURCES = $(SFILES)
TAGFILES = $(SOURCES) ${HFILES} ${ALLPARAM} ${POSSLIBS} 

# the objects that were originally needed:
ORIG_OBS = inferiors.o regcache.o remote-utils.o server.o signals.o \
	target.o \
	utils.o \
	mem-break.o \
	$(DEPFILES)
# a newer set of objects:
NON_CIRCULAR_OBS = inferiors.o regcache.o remote-utils.o server.o \
	signals.o target.o \
	utils.o debug.o version.o \
	mem-break.o xml-utils.o \
	ptid.o buffer.o format.o dll.o \
	rsp-low.o tdesc.o \
	$(XML_BUILTIN) \
	$(DEPFILES) \
	$(LIBOBJS)
OBS = $(NON_CIRCULAR_OBS) init_all_my_registers.o
# objects that would be part of OBS, but fail to compile, and as such have
# been removed because they were not part of ORIG_OBS:
BROKEN_OBS = agent.o ax.o waitstatus.o hostio.o event-loop.o tracepoint.o \
	filestuff.o notif.o
# objects that compile, but are missing symbols upon linking, and as such
# have been removed because they were not part of ORIG_OBS:
NONLINK_OBS = common-utils.o vec.o gdb_vecs.o print-utils.o
# objects for gdbreplay:
GDBREPLAY_OBS = gdbreplay.o version.o
GDBSERVER_LIBS = @GDBSERVER_LIBS@
XM_CLIBS = @LIBS@ $(LIBIBERTY)
CDEPS = $(srcdir)/proc-service.list

# XML files to compile in to gdbserver, if any.
XML_DIR = $(srcdir)/../features
XML_FILES = @srv_xmlfiles@
XML_BUILTIN = @srv_xmlbuiltin@

IPA_DEPFILES = @IPA_DEPFILES@
extra_libraries = @extra_libraries@

SUBDIRS = @MAINT@ $(GNULIB_BUILDDIR)
CLEANDIRS = $(SUBDIRS)

# List of subdirectories in the build tree that must exist.
# This is used to force build failures in existing trees when
# a new directory is added.
# The format here is for the `case' shell command.
REQUIRED_SUBDIRS = $(GNULIB_BUILDDIR)

# If we ever treat gnulib as a subdir as FSF gdb does, these will be
# necessary. It is okay to put them even when not using subdirs though,
# even if it is kind of pointless...
FLAGS_TO_PASS = \
	"prefix=$(prefix)" \
	"exec_prefix=$(exec_prefix)" \
	"infodir=$(infodir)" \
	"datarootdir=$(datarootdir)" \
	"docdir=$(docdir)" \
	"htmldir=$(htmldir)" \
	"pdfdir=$(pdfdir)" \
	"libdir=$(libdir)" \
	"mandir=$(mandir)" \
	"datadir=$(datadir)" \
	"includedir=$(includedir)" \
	"against=$(against)" \
	"DESTDIR=$(DESTDIR)" \
	"AR=$(AR)" \
	"AR_FLAGS=$(AR_FLAGS)" \
	"CC=$(CC)" \
	"CFLAGS=$(CFLAGS) $(C_ARCHFLAGS)" \
	"CXX=$(CXX)" \
	"CXXFLAGS=$(CXXFLAGS)" \
	"DLLTOOL=$(DLLTOOL)" \
	"LDFLAGS=$(LDFLAGS) $(C_ARCHFLAGS)" \
	"RANLIB=$(RANLIB)" \
	"MAKEINFO=$(MAKEINFO)" \
	"MAKEHTML=$(MAKEHTML)" \
	"MAKEHTMLFLAGS=$(MAKEHTMLFLAGS)" \
	"INSTALL=$(INSTALL)" \
	"INSTALL_PROGRAM=$(INSTALL_PROGRAM)" \
	"INSTALL_DATA=$(INSTALL_DATA)" \
	"RUNTEST=$(RUNTEST)" \
	"RUNTESTFLAGS=$(RUNTESTFLAGS)"

# All generated files which can be included by another file.
generated_files = config.h @MAINT@ $(GNULIB_H)

# Prevent Sun make from putting in the machine type.  Setting
# TARGET_ARCH to nothing works for SunOS 3, 4.0, but not for 4.1.
.c.o:
	$(COMPILE) $<
	$(POSTCOMPILE)

## Old rule was: $(AM_V_CC)${CC} -c $(CPPFLAGS) ${INTERNAL_CFLAGS} $<

all: gdbserver$(EXEEXT) gdbreplay$(EXEEXT) $(extra_libraries)
	@$(MAKE) $(FLAGS_TO_PASS) DO=$@ "DODIRS=$(SUBDIRS)" subdir_do

# Traditionally "install" depends on "all".  But it may be useful
# not to; for example, if the user has made some trivial change to a 
# source file and does NOT care about rebuilding or just wants to save the
# time it takes for make to check that all is up to date.
# install-only is intended to address that need.
install: all install-only
install-only:
	n=`echo gdbserver | $(SED) '$(program_transform_name)'`; \
	if [ "x$${n}" = "x" ]; then \
	  n=gdbserver; \
	else \
	  echo "n is set to $${n}"; \
	fi; \
	if [ x"$(IPA_DEPFILES)" != x"" ]; then \
	  $(RUN_MKINSTALLDIRS) $(DESTDIR)$(libdir); \
	  $(INSTALL_PROGRAM) $(IPA_LIB) $(DESTDIR)$(libdir)/$(IPA_LIB); \
	fi; \
	$(RUN_MKINSTALLDIRS) $(DESTDIR)$(bindir); \
	$(INSTALL_PROGRAM) gdbserver$(EXEEXT) $(DESTDIR)$(bindir)/$${n}$(EXEEXT); \
	$(RUN_MKINSTALLDIRS) $(DESTDIR)$(man1dir); \
	$(INSTALL_DATA) $(srcdir)/gdbserver.1 $(DESTDIR)$(man1dir)/$${n}.1
	@$(MAKE) $(FLAGS_TO_PASS) DO=$@ "DODIRS=$(SUBDIRS)" subdir_do

uninstall: force
	n=`echo gdbserver | $(SED) '$(program_transform_name)'`; \
	if [ "x$${n}" = "x" ]; then \
	  n=gdbserver; \
	else \
	  echo "n is set to $${n}"; \
	fi; \
	rm -f $(AM_V_v) $(bindir)/$${n}$(EXEEXT) $(DESTDIR)$(man1dir)/$${n}.1
	@$(MAKE) $(FLAGS_TO_PASS) DO=$@ "DODIRS=$(SUBDIRS)" subdir_do

installcheck:
check:
info dvi pdf:
install-info:
install-pdf:
html:
install-html:
clean-info: force
	@$(MAKE) $(FLAGS_TO_PASS) DO=$@ "DODIRS=$(SUBDIRS)" subdir_do

gdbserver$(EXEEXT): $(OBS) ${ADD_DEPS} ${CDEPS}
	$(AM_V_at)rm -f $(AM_V_v) gdbserver$(EXEEXT)
	$(AM_V_CCLD)${CC_LD} $(GLOBAL_CFLAGS) $(INTERNAL_LDFLAGS) \
	  -o gdbserver$(EXEEXT) $(OBS) $(GDBSERVER_LIBS) $(XM_CLIBS)

$(LIBGNU) $(GNULIB_H): all-lib
all-lib: $(GNULIB_BUILDDIR)/Makefile
	@$(MAKE) $(FLAGS_TO_PASS) DO=all DODIRS=$(GNULIB_BUILDDIR) subdir_do
.PHONY: all-lib

# Depend on, but do NOT actually link against LIBGNU here, because while it
# does have a rule for it, that rule does NOT actually make it (because we
# are not treating gnulib as a subdir like FSF gdb does), and so the
# dependency can be satisfied without it actually existing to be available
# for linking against.  However, we no longer always build LIBGNU, so
# comment the dependency out until I get that sorted out:
gdbreplay$(EXEEXT): $(GDBREPLAY_OBS) # $(LIBGNU)
	$(AM_V_at)rm -f $(AM_V_v) gdbreplay$(EXEEXT)
	$(AM_V_CCLD)${CC_LD} $(GLOBAL_CFLAGS) $(INTERNAL_LDFLAGS) \
	  -o gdbreplay$(EXEEXT) $(GDBREPLAY_OBS) $(XM_CLIBS)

gdbreplay.o: gdbreplay.c config.h

IPA_OBJS=ax-ipa.o tracepoint-ipa.o format-ipa.o utils-ipa.o \
  regcache-ipa.o remote-utils-ipa.o common-utils-ipa.o tdesc-ipa.o \
  print-utils-ipa.o rsp-low-ipa.o ${IPA_DEPFILES}

IPA_LIB=libinproctrace.so

$(IPA_LIB): $(IPA_OBJS) ${ADD_DEPS} ${CDEPS}
	$(AM_V_at)rm -f $(AM_V_v) $(IPA_LIB)
	$(AM_V_CCLD)${CC_LD} -shared -fPIC -Wl,--no-undefined \
	  $(INTERNAL_CFLAGS) $(INTERNAL_LDFLAGS) -o $(IPA_LIB) \
	  ${IPA_OBJS} -ldl -pthread

# Put the proper machine-specific files first, so M-. on a machine
# specific routine gets the one for the correct machine.
# The xyzzy stuff below deals with empty DEPFILES
TAGS:	${TAGFILES}
	etags `find ${srcdir}/../config -name $(DEPRECATED_TM_FILE) -print` \
	  `find ${srcdir}/../config -name ${XM_FILE} -print` \
	  `find ${srcdir}/../config -name ${NAT_FILE} -print` \
	  `for i in yzzy ${DEPFILES}; do \
	     if [ "x$${i}" != "xyzzy" ]; then \
	       echo ${srcdir}/$${i} | $(SED) -e 's/\.o$$/\.c/' ; \
	     fi; \
	   done` \
	  ${TAGFILES}
tags: TAGS

# 'rm -f' gets the '-v' flag here when the files that it removes can vary:
mostlyclean:
	rm -f $(AM_V_v) $(ORIG_OBS) $(GDBREPLAY_OBS)
clean: mostlyclean
	@$(MAKE) $(FLAGS_TO_PASS) DO=$@ "DODIRS=$(SUBDIRS)" subdir_do
	rm -f $(AM_V_v) *.o ${ADD_FILES} *~
	rm -f version.c
	rm -f $(AM_V_v) gdbserver$(EXEEXT) gdbreplay$(EXEEXT) core make.log
	rm -f $(AM_V_v) $(IPA_LIB)
	rm -f aarch64.c
	rm -f reg-arm.c reg-bfin.c i386.c reg-i386.c reg-ia64.c reg-m32r.c
	rm -f reg-m68k.c reg-mips.c
	rm -f reg-ppc.c reg-sh.c reg-sparc.c reg-spu.c amd64.c i386-linux.c
	rm -f reg-x86-64.c reg-i386-linux.c reg-ppc64.c
	rm -f reg-cris.c reg-crisv32.c amd64-linux.c reg-xtensa.c
	rm -f reg-tilegx.c reg-tilegx32.c
	rm -f reg-arm-macosx.c
	rm -f arm-with-iwmmxt.c
	rm -f arm-with-vfpv2.c arm-with-vfpv3.c arm-with-neon.c
	rm -f mips-linux.c mips64-linux.c
	rm -f nios2-linux.c
	rm -f powerpc-32.c powerpc-32l.c powerpc-64l.c powerpc-e500l.c
	rm -f powerpc-altivec32l.c powerpc-cell32l.c powerpc-vsx32l.c
	rm -f powerpc-altivec64l.c powerpc-cell64l.c powerpc-vsx64l.c
	rm -f powerpc-isa205-32l.c powerpc-isa205-64l.c
	rm -f powerpc-isa205-altivec32l.c powerpc-isa205-vsx32l.c
	rm -f powerpc-isa205-altivec64l.c powerpc-isa205-vsx64l.c
	rm -f s390-linux32.c s390-linux64.c s390x-linux64.c
	rm -f s390-linux32v1.c s390-linux32v2.c s390-linux64v1.c
	rm -f s390-linux64v2.c s390x-linux64v1.c s390x-linux64v2.c
	rm -f s390-te-linux32.c s390-te-linux64.c
	rm -f tic6x-c64xp-linux.c tic6x-c64x-linux.c tic6x-c62x-linux.c
	rm -f xml-builtin.c stamp-xml
	rm -f i386-avx.c i386-avx-linux.c
	rm -f i386-mpx.c i386-mpx-linux.c
	rm -f i386-avx512.c i386-avx512-linux.c
	rm -f amd64-avx.c amd64-avx-linux.c
	rm -f amd64-mpx.c amd64-mpx-linux.c
	rm -f amd64-avx512.c amd64-avx512-linux.c
	rm -f i386-mmx.c i386-mmx-linux.c
	rm -f x32.c x32-linux.c
	rm -f x32-avx.c x32-avx-linux.c
	rm -f x32-avx512.c x32-avx512-linux.c
	rm -fr $(AM_V_v) autom4te.cache || rmdir autom4te.cache
# (once init_all_my_registers.c builds properly from this Makefile, it can
# be cleaned here, too)

# Do NOT remove GNULIB_BUILDDIR here, because we are defining it to be the
# actual source directory for gnulib here, unlike FSF gdb, which creates
# a separate build directory for it.
maintainer-clean realclean distclean: clean
	@$(MAKE) $(FLAGS_TO_PASS) DO=$@ "DODIRS=$(SUBDIRS)" subdir_do
	rm -f nm.h tm.h xm.h config.status config.h stamp-h config.log
	rm -f Makefile
	-rm -f .DS_Store

subdir_do: force
	@for i in $(DODIRS); do \
	  case $${i} in \
	  $(REQUIRED_SUBDIRS)) \
	    if [ ! -f ./$${i}/Makefile ]; then \
	      echo "Missing $${i}/Makefile" >&2; \
	      exit 1; \
	    fi ;; \
	  esac; \
	  if [ "x$${i}" = "x../gnulib" -o "x$${i}" = "x../build-gnulib" ]; then \
	    if [ -f ./$${i}/Makefile -a -f ./$${i}/import/Makefile ]; then \
	      if (cd ./$${i}; \
	        $(MAKE) $(FLAGS_TO_PASS) $(DO)); then \
	        echo "'$@' ($(DO)) succeeded for '$${i}'"; \
	      else \
	        echo "gdbserver/Makefile: '$@' ($(DO)) failed for '$${i}'" >&2; \
	        exit 1; \
	      fi; \
	    else echo "at least one Makefile missing for '$${i}'"; fi; \
	  else \
	    if [ -f ./$${i}/Makefile ]; then \
	      if (cd ./$${i}; \
	        $(MAKE) $(FLAGS_TO_PASS) $(DO)); then \
	        echo "'$@' ($(DO)) succeeded for '$${i}'"; \
	      else \
	        echo "gdbserver/Makefile: '$@' ($(DO)) failed for '$${i}'" >&2; \
	        exit 1; \
	      fi; \
	    else echo "no Makefile for '$${i}'"; fi; \
	  fi; \
	done

STAGESTUFF=${OBS} ${TSOBS} ${NTSOBS} ${ADD_FILES} init.c init.o version.c \
  gdb

config.h: stamp-h
	@echo "this target, '$@', just makes its dep, '$<'"
stamp-h: config.h.in config.status
	CONFIG_FILES="" CONFIG_HEADERS=config.h $(SHELL) ./config.status
	touch stamp-h

Makefile: Makefile.in config.status
	CONFIG_HEADERS="" $(SHELL) ./config.status
	touch Makefile

$(GNULIB_BUILDDIR)/Makefile: $(srcdir)/../gnulib/Makefile.in config.status
	@cd $(GNULIB_BUILDDIR); CONFIG_FILES="Makefile" \
 	  CONFIG_COMMANDS="depfiles" \
	  CONFIG_HEADERS="" \
	  CONFIG_LINKS="" \
	  $(SHELL) config.status

config.status: configure configure.srv $(srcdir)/../development.sh
	$(SHELL) ./config.status --recheck

# a compromise between the built-in rule and the automake rule:
configure: @MAINT@ configure.ac
	if test -x "`which autoconf`"; then \
	  echo "running autoconf" && autoconf; \
	elif test -e configure.sh; then \
	  echo "using backup $@ script"; \
	  cat configure.sh >$@; \
	  chmod a+x $@; \
	else \
	  echo "unsure what to do, so just touching $@" && touch $@; \
	fi

# automatic rebuilding in automake-generated Makefiles requires
# this rule in the toplevel Makefile, which, with GNU make, causes
# the desired updates through the implicit regeneration of the Makefile
# and all of its prerequisites.
am--refresh:
	@:

force:

# for the subdir_do target in the parent directory:
pdf-local:
.PHONY: pdf-local

version.c: Makefile $(srcdir)/../version.in $(srcdir)/../../bfd/version.h \
  $(srcdir)/../common/create-version.sh
	$(AM_V_GEN)if [ -f $(srcdir)/../common/create-version.sh ]; then \
	  echo "using new rules to make $@"; \
	  SH_V=$(V) $(SHELL) $(srcdir)/../common/create-version.sh \
	    $(srcdir)/.. $(host_alias) $(target_alias) version.c; \
	else \
	  echo "using old rules to make $@"; \
	  echo 'char *version = "$(VERSION)";' | tee version.c; \
	fi

xml-builtin.c: stamp-xml
	@echo "this target '$@' just makes its dep '$<'"
stamp-xml: $(XML_DIR)/feature_to_c.sh Makefile $(XML_FILES)
	$(AM_V_at)rm -f $(AM_V_v) xml-builtin.tmp
	$(SHELL) $(XML_DIR)/feature_to_c.sh xml-builtin.tmp $(XML_FILES)
	$(SHELL) $(srcdir)/../../move-if-change xml-builtin.tmp xml-builtin.c
	echo "timestamp: `date`" | tee stamp-xml

.PRECIOUS: xml-builtin.c

# GNU Make has an annoying habit of putting *all* the Makefile variables
# into the environment, unless you include this target as a circumvention.
# Rumor is that this will be fixed (and this target can be removed)
# in GNU Make 4.0.
.NOEXPORT:

# GNU Make 3.63 has a different problem: it keeps tacking command line
# overrides onto the definition of $(MAKE).  This variable setting
# will remove them.
MAKEOVERRIDES=

gdb_proc_service_h = $(srcdir)/../gdb_proc_service.h $(srcdir)/../gregset.h
regdat_sh = $(regformat_dir)/regdat.sh
run_regdat_sh = SH_V=$(V) $(SHELL) $(regdat_sh)
regdef_h = $(regformat_dir)/regdef.h
regcache_h = $(srcdir)/regcache.h
server_h = $(srcdir)/server.h $(regcache_h) config.h $(srcdir)/target.h \
		$(srcdir)/mem-break.h

UST_CFLAGS = -DCONFIG_UST_GDB_INTEGRATION

# Note, we only build the IPA if -fvisibility=hidden is supported in
# the first place.
IPAGENT_CFLAGS = $(CPPFLAGS) $(INTERNAL_CFLAGS) $(UST_CFLAGS) \
	-fPIC -DIN_PROCESS_AGENT \
	-fvisibility=hidden

IPAGENT_COMPILE = $(COMPILE.pre) $(IPAGENT_CFLAGS) $(COMPILE.post)

# In-process agent object rules:
ax-ipa.o: ax.c
	$(AM_V_CC)$(IPAGENT_COMPILE) $(WARN_CFLAGS_NO_FORMAT) $<
	$(POSTCOMPILE)
tracepoint-ipa.o: tracepoint.c
	$(AM_V_CC)$(IPAGENT_COMPILE) $<
	$(POSTCOMPILE)
utils-ipa.o: utils.c
	$(AM_V_CC)$(IPAGENT_COMPILE) $<
	$(POSTCOMPILE)
format-ipa.o: ../common/format.c
	$(AM_V_CC)$(IPAGENT_COMPILE) $<
	$(POSTCOMPILE)
common-utils-ipa.o: ../common/common-utils.c
	$(AM_V_CC)$(IPAGENT_COMPILE) $<
	$(POSTCOMPILE)
remote-utils-ipa.o: remote-utils.c
	$(AM_V_CC)$(IPAGENT_COMPILE) $<
	$(POSTCOMPILE)
regcache-ipa.o: regcache.c
	$(AM_V_CC)$(IPAGENT_COMPILE) $<
	$(POSTCOMPILE)
i386-linux-ipa.o: i386-linux.c
	$(AM_V_CC)$(IPAGENT_COMPILE) $<
	$(POSTCOMPILE)
linux-i386-ipa.o: linux-i386-ipa.c
	$(AM_V_CC)$(IPAGENT_COMPILE) $<
	$(POSTCOMPILE)
linux-amd64-ipa.o: linux-amd64-ipa.c
	$(AM_V_CC)$(IPAGENT_COMPILE) $<
	$(POSTCOMPILE)
amd64-linux-ipa.o: amd64-linux.c
	$(AM_V_CC)$(IPAGENT_COMPILE) $<
	$(POSTCOMPILE)
tdesc-ipa.o: tdesc.c
	$(AM_V_CC)$(IPAGENT_COMPILE) $<
	$(POSTCOMPILE)
print-utils-ipa.o: ../common/print-utils.c
	$(AM_V_CC)$(IPAGENT_COMPILE) $<
	$(POSTCOMPILE)
rsp-low-ipa.o: ../common/rsp-low.c
	$(AM_V_CC)$(IPAGENT_COMPILE) $<
	$(POSTCOMPILE)

# end ipa rules

linux_low_h = $(srcdir)/linux-low.h
dll_h = $(srcdir)/dll.h
i386_low_h = $(srcdir)/i386-low.h
inferiors_h = $(srcdir)/inferiors.h
notif_h = $(srcdir)/notif.h $(server_h)
remote_utils_h = $(srcdir)/remote-utils.h config.h
tdesc_h = $(srcdir)/tdesc.h

debug.o: debug.c $(server_h)
dll.o: dll.c $(server_h) $(dll_h)
event-loop.o: event-loop.c event-loop.h $(server_h)
hostio-errno.o: hostio-errno.c $(server_h)
hostio.o: hostio.c $(server_h)
i386-low.o: i386-low.c $(server_h) $(i386_low_h)
inferiors.o: inferiors.c $(inferiors_h) $(server_h) $(dll_h)
mem-break.o: mem-break.c $(server_h)
notif.o: notif.c $(notif_h) $(remote_utils_h)
proc-service.o: proc-service.c $(server_h) $(linux_low_h) \
  $(gdb_proc_service_h)
regcache.o: regcache.c $(server_h) $(regdef_h)
remote-utils.o: remote-utils.c config.h terminal.h $(server_h)
server.o: server.c $(server_h)
symbol.o: symbol.c $(server_h)
target.o: target.c $(server_h)
tdesc.o: tdesc.c $(server_h) $(tdesc_h) $(regdef_h) $(inferiors_h)
thread-db.o: thread-db.c $(server_h) $(linux_low_h) $(gdb_proc_service_h)
utils.o: utils.c $(server_h)
wincecompat.o: wincecompat.c $(server_h)
xtensa-xtregs.o: xtensa-xtregs.c

ax_h = $(srcdir)/ax.h $(server_h) $(regcache_h)
tracepoint_h = $(srcdir)/tracepoint.h

ax.o: ax.c $(server_h) $(ax_h) $(tracepoint_h)
	$(COMPILE) $(WARN_CFLAGS_NO_FORMAT) $<
	$(POSTCOMPILE)

gdbthread_h = $(srcdir)/gdbthread.h $(server_h) $(inferiors_h)

tracepoint.o: tracepoint.c $(server_h) $(tracepoint_h) $(gdbthread_h) \
  $(ax_h) $(tdesc_h)

# objects whose sources are from ../signals:
signals.o: ../signals/signals.c $(server_h)
	$(AM_V_COMPILER)$(COMPILER) -c $(CPPFLAGS) $(INTERNAL_CFLAGS) $< \
	  -DGDBSERVER

# non-ipa objects whose sources are from ../common:
print-utils.o: ../common/print-utils.c
	$(COMPILE) $<
	$(POSTCOMPILE)
rsp-low.o: ../common/rsp-low.c
	$(COMPILE) $<
	$(POSTCOMPILE)
linux-procfs.o: ../common/linux-procfs.c
	$(COMPILE) $<
	$(POSTCOMPILE)
linux-ptrace.o: ../common/linux-ptrace.c
	$(COMPILE) $<
	$(POSTCOMPILE)
common-utils.o: ../common/common-utils.c
	$(COMPILE) $<
	$(POSTCOMPILE)
vec.o: ../common/vec.c
	$(COMPILE) $<
	$(POSTCOMPILE)
gdb_vecs.o: ../common/gdb_vecs.c
	$(COMPILE) $<
	$(POSTCOMPILE)
xml-utils.o: ../common/xml-utils.c
	$(COMPILE) $<
	$(POSTCOMPILE)
linux-osdata.o: ../common/linux-osdata.c
	$(COMPILE) $<
	$(POSTCOMPILE)
ptid.o: ../common/ptid.c
	$(COMPILE) $<
	$(POSTCOMPILE)
buffer.o: ../common/buffer.c
	$(COMPILE) $<
	$(POSTCOMPILE)
format.o: ../common/format.c
	$(COMPILE) $<
	$(POSTCOMPILE)
filestuff.o: ../common/filestuff.c
	$(COMPILE) $<
	$(POSTCOMPILE)
agent.o: ../common/agent.c
	$(COMPILE) $<
	$(POSTCOMPILE)
linux-btrace.o: ../common/linux-btrace.c
	$(COMPILE) $<
	$(POSTCOMPILE)
mips-linux-watch.o: ../common/mips-linux-watch.c
	$(COMPILE) $<
	$(POSTCOMPILE)

# Native object files rules from ../nat:
linux-waitpid.o: ../nat/linux-waitpid.c
	$(COMPILE) $<
	$(POSTCOMPILE)

# objects whose sources are from ../target:
waitstatus.o: ../target/waitstatus.c
	$(COMPILE) $<
	$(POSTCOMPILE)

# We build vasprintf with -DHAVE_CONFIG_H because we want that unit to
# include our config.h file.  Otherwise, some system headers do not get
# included, and the compiler emits a warning about implicitly defined
# functions (missing declaration).
vasprintf.o: $(LIBIBERTY_DIR)/vasprintf.c
	$(COMPILE) $< -DHAVE_CONFIG_H
	$(POSTCOMPILE)
vsnprintf.o: $(LIBIBERTY_DIR)/vsnprintf.c
	$(COMPILE) $<
	$(POSTCOMPILE)
safe-ctype.o: $(LIBIBERTY_DIR)/safe-ctype.c
	$(COMPILE) $<
	$(POSTCOMPILE)
lbasename.o: $(LIBIBERTY_DIR)/lbasename.c
	$(COMPILE) $<
	$(POSTCOMPILE)

i387_fp_h = $(srcdir)/i387-fp.h

i387-fp.o: i387-fp.c $(i387_fp_h) $(server_h)

inlining_h = $(srcdir)/../inlining.h

linux-low.o: linux-low.c $(linux_low_h) $(server_h) $(inlining_h)
	$(AM_V_CC)$(CC) -c $(CPPFLAGS) $(INTERNAL_CFLAGS) $< \
	  @USE_THREAD_DB@

linux-aarch64-low.o: linux-aarch64-low.c $(server_h) $(linux_low_h) \
  $(gdb_proc_service_h)
linux-amd64-ipa.o: linux-amd64-ipa.c $(server_h) $(tracepoint_h)
linux-arm-low.o: linux-arm-low.c $(linux_low_h) $(server_h)
linux-bfin-low.o: linux-bfin-low.c $(server_h) $(linux_low_h)
linux-cris-low.o: linux-cris-low.c $(linux_low_h) $(server_h)
linux-crisv32-low.o: linux-crisv32-low.c $(linux_low_h) $(server_h)
linux-i386-ipa.o: linux-i386-ipa.c $(server_h) $(tracepoint_h)
linux-i386-low.o: linux-i386-low.c $(linux_low_h) $(server_h) \
  $(i387_fp_h) $(gdb_proc_service_h)
linux-ia64-low.o: linux-ia64-low.c $(linux_low_h) $(server_h)
linux-m32r-low.o: linux-m32r-low.c $(linux_low_h) $(server_h)
linux-m68k-low.o: linux-m68k-low.c $(server_h) $(linux_low_h)
linux-mips-low.o: linux-mips-low.c $(linux_low_h) $(server_h)
linux-nios2-low.o: linux-nios2-low.c $(server_h) $(linux_low_h) \
  $(gdb_proc_service_h)
linux-ppc-low.o: linux-ppc-low.c $(linux_low_h) $(server_h)
linux-ppc64-low.o: linux-ppc64-low.c $(linux_low_h) $(server_h)
linux-s390-low.o: linux-s390-low.c $(linux_low_h) $(server_h)
linux-sh-low.o: linux-sh-low.c $(linux_low_h) $(server_h)
linux-sparc-low.o: linux-sparc-low.c $(server_h) $(linux_low_h) \
  $(gdb_proc_service_h)
linux-tic6x-low.o: linux-tic6x-low.c $(server_h) $(linux_low_h) \
  $(gdb_proc_service_h)
linux-tile-low.o: linux-tile-low.c $(server_h) $(linux_low_h)
linux-x86-64-low.o: linux-x86-64-low.c $(linux_low_h) $(server_h) \
  $(i387_fp_h) $(gdb_proc_service_h)
linux-x86-low.o: linux-x86-low.c $(server_h) $(linux_low_h) $(i387_fp_h) \
  $(i386_low_h) $(gdb_proc_service_h) $(tdesc_h) $(tracepoint_h) $(ax_h)
linux-xtensa-low.o: linux-xtensa-low.c $(server_h) $(linux_low_h) \
  xtensa-xtregs.c

low-hppabsd.o: low-hppabsd.c $(server_h)
low-lynx.o: low-lynx.c $(server_h)
low-nbsd.o: low-nbsd.c $(server_h)
low-sim.o: low-sim.c $(server_h)
low-sparc.o: low-sparc.c $(server_h)
low-sun3.o: low-sun3.c $(server_h)

lynx_low_h = $(srcdir)/lynx-low.h $(server_h)

lynx-i386-low.o: lynx-i386-low.c $(server_h) $(lynx_low_h)
lynx-low.o: lynx-low.c $(server_h) $(lynx_low_h)
lynx-ppc-low.o: lynx-ppc-low.c $(server_h) $(lynx_low_h)

macosx_low_h = $(srcdir)/macosx-low.h
macosx_excthread_h = $(srcdir)/macosx-excthread.h
macosx_mutils_h = $(srcdir)/macosx-mutils.h
macosx_threads_h = $(srcdir)/macosx-threads.h

macosx_dir = $(srcdir)/../macosx
arm_macosx_regnums_h = $(macosx_dir)/arm-macosx-regnums.h
arm_macosx_thread_status_h = $(macosx_dir)/arm-macosx-thread-status.h
ppc_macosx_regnums_h = $(macosx_dir)/ppc-macosx-regnums.h
ppc_macosx_thread_status_h = $(macosx_dir)/ppc-macosx-thread-status.h

macosx-low.o: macosx-low.c config.h $(macosx_low_h) $(macosx_excthread_h) \
  $(macosx_threads_h) $(macosx_mutils_h)
macosx-excthread.o: macosx-excthread.c config.h $(macosx_low_h) \
  $(macosx_excthread_h) $(macosx_threads_h)
macosx-arm-low.o: macosx-arm-low.c $(macosx_low_h) arm-regnums.h \
  $(arm_macosx_regnums_h) $(arm_macosx_thread_status_h)
macosx-i386-low.o: macosx-i386-low.c config.h $(macosx_low_h) $(server_h) \
  $(i387_fp_h) $(gdb_proc_service_h) $(linux_low_h)
macosx-ppc-low.o: macosx-ppc-low.c $(macosx_low_h) $(macosx_excthread_h) \
  $(macosx_threads_h) $(ppc_macosx_regnums_h) $(ppc_macosx_thread_status_h)
macosx-threads.o: macosx-threads.c $(macosx_low_h) $(macosx_excthread_h) \
  $(macosx_threads_h) config.h
macosx-mutils.o: macosx-mutils.c config.h $(server_h) $(macosx_low_h) \
  $(macosx_mutils_h)

nto_low_h = $(srcdir)/nto-low.h

nto-low.o: nto-low.c $(server_h) $(gdbthread_h) $(nto_low_h) hostio.h
nto-x86-low.o: nto-x86-low.c $(nto_low_h) $(regdef_h) $(regcache_h)

spu-low.o: spu-low.c $(server_h)

win32_low_h = $(srcdir)/win32-low.h

win32-arm-low.o: win32-arm-low.c $(server_h) $(win32_low_h)
win32-i386-low.o: win32-i386-low.c $(server_h) $(win32_low_h) $(i386_low_h)
win32-low.o: win32-low.c $(server_h) $(regcache_h) $(win32_low_h)

# files prefixed with "reg-" are generally older than those without
# that prefix, so put the prefixed ones before the un-prefixed ones
# (but try to keep it alphabetical otherwise)
aarch64.o : aarch64.c $(regdef_h)
aarch64.c : $(regformat_dir)/aarch64.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/aarch64.dat aarch64.c
reg-arm.o : reg-arm.c $(regdef_h)
reg-arm.c : $(regformat_dir)/reg-arm.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/reg-arm.dat reg-arm.c
reg-arm-macosx.o : reg-arm-macosx.c $(regdef_h)
reg-arm-macosx.c : $(regformat_dir)/reg-arm-macosx.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/reg-arm-macosx.dat \
	  reg-arm-macosx.c
arm-with-iwmmxt.o : arm-with-iwmmxt.c $(regdef_h)
arm-with-iwmmxt.c : $(regformat_dir)/arm-with-iwmmxt.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/arm-with-iwmmxt.dat \
	  arm-with-iwmmxt.c
arm-with-vfpv2.o : arm-with-vfpv2.c $(regdef_h)
arm-with-vfpv2.c : $(regformat_dir)/arm-with-vfpv2.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/arm-with-vfpv2.dat \
	  arm-with-vfpv2.c
arm-with-vfpv3.o : arm-with-vfpv3.c $(regdef_h)
arm-with-vfpv3.c : $(regformat_dir)/arm-with-vfpv3.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/arm-with-vfpv3.dat \
	  arm-with-vfpv3.c
arm-with-neon.o : arm-with-neon.c $(regdef_h)
arm-with-neon.c : $(regformat_dir)/arm-with-neon.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/arm-with-neon.dat \
	  arm-with-neon.c
reg-bfin.o : reg-bfin.c $(regdef_h)
reg-bfin.c : $(regformat_dir)/reg-bfin.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/reg-bfin.dat \
	  reg-bfin.c
reg-cris.o : reg-cris.c $(regdef_h)
reg-cris.c : $(regformat_dir)/reg-cris.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/reg-cris.dat \
	  reg-cris.c
reg-crisv32.o : reg-crisv32.c $(regdef_h)
reg-crisv32.c : $(regformat_dir)/reg-crisv32.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/reg-crisv32.dat \
	  reg-crisv32.c
reg-i386.o : reg-i386.c $(regdef_h)
reg-i386.c : $(regformat_dir)/reg-i386.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/reg-i386.dat \
	  reg-i386.c
reg-i386-linux.o : reg-i386-linux.c $(regdef_h)
reg-i386-linux.c : $(regformat_dir)/reg-i386-linux.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/reg-i386-linux.dat \
	  reg-i386-linux.c
i386.o : i386.c $(regdef_h)
i386.c : $(regformat_dir)/i386/i386.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/i386/i386.dat i386.c
i386-linux.o : i386-linux.c $(regdef_h)
i386-linux.c : $(regformat_dir)/i386/i386-linux.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/i386/i386-linux.dat \
	  i386-linux.c
i386-avx.c : $(regformat_dir)/i386/i386-avx.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/i386/i386-avx.dat \
	  i386-avx.c
i386-avx-linux.c : $(regformat_dir)/i386/i386-avx-linux.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) \
	  $(regformat_dir)/i386/i386-avx-linux.dat i386-avx-linux.c
i386-avx512.c : $(regformat_dir)/i386/i386-avx512.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/i386/i386-avx512.dat \
	  i386-avx512.c
i386-avx512-linux.c : $(regformat_dir)/i386/i386-avx512-linux.dat \
  $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) \
	  $(regformat_dir)/i386/i386-avx512-linux.dat i386-avx512-linux.c
i386-mpx.c : $(regformat_dir)/i386/i386-mpx.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/i386/i386-mpx.dat \
	  i386-mpx.c
i386-mpx-linux.c : $(regformat_dir)/i386/i386-mpx-linux.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) \
	  $(regformat_dir)/i386/i386-mpx-linux.dat i386-mpx-linux.c
i386-mmx.c : $(regformat_dir)/i386/i386-mmx.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/i386/i386-mmx.dat \
	  i386-mmx.c
i386-mmx-linux.c : $(regformat_dir)/i386/i386-mmx-linux.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) \
	  $(regformat_dir)/i386/i386-mmx-linux.dat i386-mmx-linux.c
reg-ia64.o : reg-ia64.c $(regdef_h)
reg-ia64.c : $(regformat_dir)/reg-ia64.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/reg-ia64.dat \
	  reg-ia64.c
reg-m32r.o : reg-m32r.c $(regdef_h)
reg-m32r.c : $(regformat_dir)/reg-m32r.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/reg-m32r.dat \
	  reg-m32r.c
reg-m68k.o : reg-m68k.c $(regdef_h)
reg-m68k.c : $(regformat_dir)/reg-m68k.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/reg-m68k.dat \
	  reg-m68k.c
reg-cf.c : $(regformat_dir)/reg-cf.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/reg-cf.dat reg-cf.c
reg-mips.o : reg-mips.c $(regdef_h)
reg-mips.c : $(regformat_dir)/reg-mips.dat $(regdat_sh)
	$(run_regdat_sh) $(regformat_dir)/reg-mips.dat reg-mips.c
mips-linux.c : $(regformat_dir)/mips-linux.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/mips-linux.dat \
	  mips-linux.c
mips-dsp-linux.c : $(regformat_dir)/mips-dsp-linux.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/mips-dsp-linux.dat \
	  mips-dsp-linux.c
mips64-linux.c : $(regformat_dir)/mips64-linux.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/mips64-linux.dat \
	  mips64-linux.c
mips64-dsp-linux.c : $(regformat_dir)/mips64-dsp-linux.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/mips64-dsp-linux.dat \
	  mips64-dsp-linux.c
nios2-linux.c :	$(regformat_dir)/nios2-linux.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/nios2-linux.dat \
	  nios2-linux.c
reg-ppc.o : reg-ppc.c $(regdef_h)
reg-ppc.c : $(regformat_dir)/reg-ppc.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/reg-ppc.dat reg-ppc.c
reg-ppc64.o : reg-ppc64.c $(regdef_h)
reg-ppc64.c : $(regformat_dir)/reg-ppc64.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/reg-ppc64.dat \
	  reg-ppc64.c
powerpc-32.c : $(regformat_dir)/rs6000/powerpc-32.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) \
	  $(regformat_dir)/rs6000/powerpc-32.dat powerpc-32.c
powerpc-32l.c : $(regformat_dir)/rs6000/powerpc-32l.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) \
	  $(regformat_dir)/rs6000/powerpc-32l.dat powerpc-32l.c
powerpc-altivec32l.c : $(regformat_dir)/rs6000/powerpc-altivec32l.dat \
  $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) \
	  $(regformat_dir)/rs6000/powerpc-altivec32l.dat \
	  powerpc-altivec32l.c
powerpc-cell32l.c : $(regformat_dir)/rs6000/powerpc-cell32l.dat \
  $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) \
	  $(regformat_dir)/rs6000/powerpc-cell32l.dat powerpc-cell32l.c
powerpc-vsx32l.c : $(regformat_dir)/rs6000/powerpc-vsx32l.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) \
	  $(regformat_dir)/rs6000/powerpc-vsx32l.dat powerpc-vsx32l.c
powerpc-isa205-32l.c : $(regformat_dir)/rs6000/powerpc-isa205-32l.dat \
  $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) \
	  $(regformat_dir)/rs6000/powerpc-isa205-32l.dat \
	  powerpc-isa205-32l.c
powerpc-isa205-altivec32l.c : $(regformat_dir)/rs6000/powerpc-isa205-altivec32l.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) \
	  $(regformat_dir)/rs6000/powerpc-isa205-altivec32l.dat \
	  powerpc-isa205-altivec32l.c
powerpc-isa205-vsx32l.c : $(regformat_dir)/rs6000/powerpc-isa205-vsx32l.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) \
	  $(regformat_dir)/rs6000/powerpc-isa205-vsx32l.dat \
	  powerpc-isa205-vsx32l.c
powerpc-e500l.c : $(regformat_dir)/rs6000/powerpc-e500l.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) \
	  $(regformat_dir)/rs6000/powerpc-e500l.dat powerpc-e500l.c
powerpc-64l.c : $(regformat_dir)/rs6000/powerpc-64l.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) \
	  $(regformat_dir)/rs6000/powerpc-64l.dat powerpc-64l.c
powerpc-altivec64l.c : $(regformat_dir)/rs6000/powerpc-altivec64l.dat \
  $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) \
	  $(regformat_dir)/rs6000/powerpc-altivec64l.dat \
	  powerpc-altivec64l.c
powerpc-cell64l.c : $(regformat_dir)/rs6000/powerpc-cell64l.dat \
  $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) \
	  $(regformat_dir)/rs6000/powerpc-cell64l.dat powerpc-cell64l.c
powerpc-vsx64l.c : $(regformat_dir)/rs6000/powerpc-vsx64l.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) \
	  $(regformat_dir)/rs6000/powerpc-vsx64l.dat powerpc-vsx64l.c
powerpc-isa205-64l.c : $(regformat_dir)/rs6000/powerpc-isa205-64l.dat \
  $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) \
	  $(regformat_dir)/rs6000/powerpc-isa205-64l.dat \
	  powerpc-isa205-64l.c
powerpc-isa205-altivec64l.c : $(regformat_dir)/rs6000/powerpc-isa205-altivec64l.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) \
	  $(regformat_dir)/rs6000/powerpc-isa205-altivec64l.dat \
	  powerpc-isa205-altivec64l.c
powerpc-isa205-vsx64l.c : $(regformat_dir)/rs6000/powerpc-isa205-vsx64l.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) \
	  $(regformat_dir)/rs6000/powerpc-isa205-vsx64l.dat \
	  powerpc-isa205-vsx64l.c
reg-s390.o : reg-s390.c $(regdef_h)
reg-s390.c : $(regformat_dir)/reg-s390.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/reg-s390.dat \
	  reg-s390.c
reg-s390x.o : reg-s390x.c $(regdef_h)
reg-s390x.c : $(regformat_dir)/reg-s390x.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/reg-s390x.dat \
	  reg-s390x.c
s390-linux32.c : $(regformat_dir)/s390-linux32.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/s390-linux32.dat \
	  s390-linux32.c
s390-linux32v1.c : $(regformat_dir)/s390-linux32v1.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/s390-linux32v1.dat \
	  s390-linux32v1.c
s390-linux32v2.c : $(regformat_dir)/s390-linux32v2.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/s390-linux32v2.dat \
	  s390-linux32v2.c
s390-linux64.c : $(regformat_dir)/s390-linux64.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/s390-linux64.dat \
	  s390-linux64.c
s390-linux64v1.c : $(regformat_dir)/s390-linux64v1.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/s390-linux64v1.dat \
	  s390-linux64v1.c
s390-linux64v2.c : $(regformat_dir)/s390-linux64v2.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/s390-linux64v2.dat \
	  s390-linux64v2.c
s390-te-linux64.c : $(regformat_dir)/s390-te-linux64.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/s390-te-linux64.dat \
	  s390-te-linux64.c
s390x-linux64.c : $(regformat_dir)/s390x-linux64.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/s390x-linux64.dat \
	  s390x-linux64.c
s390x-linux64v1.c : $(regformat_dir)/s390x-linux64v1.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/s390x-linux64v1.dat \
	  s390x-linux64v1.c
s390x-linux64v2.c : $(regformat_dir)/s390x-linux64v2.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/s390x-linux64v2.dat \
	  s390x-linux64v2.c
s390x-te-linux64.c : $(regformat_dir)/s390x-te-linux64.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/s390x-te-linux64.dat \
	  s390x-te-linux64.c
reg-sh.o : reg-sh.c $(regdef_h)
reg-sh.c : $(regformat_dir)/reg-sh.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/reg-sh.dat reg-sh.c
tic6x-c64xp-linux.c : $(regformat_dir)/tic6x-c64xp-linux.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) \
	  $(regformat_dir)/tic6x-c64xp-linux.dat tic6x-c64xp-linux.c
tic6x-c64x-linux.c : $(regformat_dir)/tic6x-c64x-linux.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/tic6x-c64x-linux.dat \
	  tic6x-c64x-linux.c
tic6x-c62x-linux.c : $(regformat_dir)/tic6x-c62x-linux.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/tic6x-c62x-linux.dat \
	  tic6x-c62x-linux.c
reg-tilegx.c : $(regformat_dir)/reg-tilegx.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/reg-tilegx.dat \
	  reg-tilegx.c
reg-tilegx32.c : $(regformat_dir)/reg-tilegx32.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/reg-tilegx32.dat \
	  reg-tilegx32.c
reg-sparc64.c : $(regformat_dir)/reg-sparc64.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/reg-sparc64.dat \
	  reg-sparc64.c
reg-spu.c : $(regformat_dir)/reg-spu.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/reg-spu.dat reg-spu.c
# Yes, the underscore does change into a hyphen for x64_64 here...
reg-x86-64.o : reg-x86-64.c $(server_h) $(regdef_h) $(regcache_h) \
  $(tdesc_h)
reg-x86-64.c : $(regformat_dir)/reg-x86-64.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/reg-x86-64.dat \
	  reg-x86-64.c
amd64.o : amd64.c $(server_h) $(tdesc_h)
amd64.c : $(regformat_dir)/i386/amd64.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/i386/amd64.dat amd64.c
amd64-linux.c : $(regformat_dir)/i386/amd64-linux.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/i386/amd64-linux.dat \
	  amd64-linux.c
amd64-avx.o : amd64-avx.c $(server_h) $(tdesc_h)
amd64-avx.c : $(regformat_dir)/i386/amd64-avx.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/i386/amd64-avx.dat \
	  amd64-avx.c
amd64-avx-linux.c : $(regformat_dir)/i386/amd64-avx-linux.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) \
	  $(regformat_dir)/i386/amd64-avx-linux.dat amd64-avx-linux.c
amd64-avx512.o : amd64-avx512.c $(server_h) $(tdesc_h)
amd64-avx512.c : $(regformat_dir)/i386/amd64-avx512.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) \
	  $(regformat_dir)/i386/amd64-avx512.dat amd64-avx512.c
amd64-avx512-linux.c : $(regformat_dir)/i386/amd64-avx512-linux.dat \
  $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) \
	  $(regformat_dir)/i386/amd64-avx512-linux.dat amd64-avx512-linux.c
amd64-mpx.o : amd64-mpx.c $(server_h) $(tdesc_h)
amd64-mpx.c : $(regformat_dir)/i386/amd64-mpx.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/i386/amd64-mpx.dat \
	  amd64-mpx.c
amd64-mpx-linux.c : $(regformat_dir)/i386/amd64-mpx-linux.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) \
	  $(regformat_dir)/i386/amd64-mpx-linux.dat amd64-mpx-linux.c
x32.o : x32.c $(server_h) $(regdef_h) $(tdesc_h)
x32.c : $(regformat_dir)/i386/x32.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/i386/x32.dat x32.c
x32-linux.c : $(regformat_dir)/i386/x32-linux.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/i386/x32-linux.dat \
	  x32-linux.c
x32-avx.o : x32-avx.c $(server_h) $(regdef_h) $(tdesc_h)
x32-avx.c : $(regformat_dir)/i386/x32-avx.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/i386/x32-avx.dat \
	  x32-avx.c
x32-avx-linux.c : $(regformat_dir)/i386/x32-avx-linux.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) \
	  $(regformat_dir)/i386/x32-avx-linux.dat x32-avx-linux.c
x32-avx512.o : x32-avx512.c $(server_h) $(regdef_h) $(tdesc_h)
x32-avx512.c : $(regformat_dir)/i386/x32-avx512.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/i386/x32-avx512.dat \
	  x32-avx512.c
x32-avx512-linux.c : $(regformat_dir)/i386/x32-avx512-linux.dat \
  $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) \
	  $(regformat_dir)/i386/x32-avx512-linux.dat x32-avx512-linux.c
reg-xtensa.o : reg-xtensa.c $(regdef_h)
reg-xtensa.c : $(regformat_dir)/reg-xtensa.dat $(regdat_sh)
	$(AM_V_GEN)$(run_regdat_sh) $(regformat_dir)/reg-xtensa.dat \
	  reg-xtensa.c

# other objects from generated sources:
version.o: version.c
xml-builtin.o: xml-builtin.c

# for compatibility with the old "init_registers" function:
init_all_my_registers.c : $(NON_CIRCULAR_OBS)
# For some reason the sed commands work when run manually, but error out
# when run through this make rule...
# commenting out until I fix it
#	echo "/* *INDENT-OFF* */" >$@ 
#	echo "/* THIS FILE IS GENERATED */" >>$@
#	echo "" >>$@
#	echo '#include "server.h"' >>$@
#	echo '#include "regdef.h"' >>$@
#	echo '#include "regcache.h"' >>$@
#	echo '#include "tdesc.h"' >>$@
#	echo "" >>$@
#	echo "/* prototypes: */" >>$@
#	$(NM) $(NON_CIRCULAR_OBS) | $(PARSE_NM_OUTPUT_CMD_ONE) | $(GREP) "init_registers_" | $(PARSE_NM_OUTPUT_CMD_TWO) | $(SED) "s|extern int|extern void|g" | tee -a $@
#	echo "" >>$@
#	echo '#ifndef _INIT_REGISTERS_DECLARED' >>$@
#	echo '# define _INIT_REGISTERS_DECLARED 1' >>$@
#	echo 'void init_registers(void) {' >>$@
#	$(NM) $(NON_CIRCULAR_OBS) | $(PARSE_NM_OUTPUT_CMD_ONE) | $(GREP) "init_registers_" | $(PARSE_NM_OUTPUT_CMD_TWO) | cut -d\  -f3 | tee -a $@
#	echo '}' >>$@
#	echo '#endif /* !_INIT_REGISTERS_DECLARED */' >>$@
#	echo "" >>$@

#
# Dependency tracking.
#

# A list of all the objects we might care about in this build
# (for reasons such as dependency tracking):
all_object_files = $(OBS) $(GDBREPLAY_OBS)

# Ensure that generated files are created early:
$(all_object_files) : $(generated_files)

# This is the end of "Makefile.in".
