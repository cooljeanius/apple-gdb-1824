/* config.h.in.  Generated from configure.ac by autoheader.  */


#ifndef HAVE_CONFIG_H
# define HAVE_CONFIG_H 1
#endif /* !HAVE_CONFIG_H */



/* Check that config.h is #included before system headers
 * (this works only for glibc, but that should be enough). */
#if defined(__GLIBC__) && !defined(__FreeBSD_kernel__) && !defined(__CONFIG_H__)
# if defined(__GNUC__) && !defined(__STRICT_ANSI__)
 #  warning "config.h should be #included before system headers"
# endif /* __GNUC__ && !__STRICT_ANSI__ */
#endif /* __GLIBC__ && !__FreeBSD_kernel__ && !__CONFIG_H__ */
#ifndef __CONFIG_H__
# define __CONFIG_H__ 1
# ifndef __MMALLOC_CONFIG_H__
#  define __MMALLOC_CONFIG_H__ 1
# endif /* __MMALLOC_CONFIG_H__ */

/* Define if building universal (internal helper macro) */
#undef AC_APPLE_UNIVERSAL_BUILD

/* Define to 1 if you have the <AvailabilityMacros.h> header file. */
#undef HAVE_AVAILABILITYMACROS_H

/* Define to 1 if the system has the type 'caddr_t'. */
#undef HAVE_CADDR_T

/* Define to 1 if you have the 'close' function. */
#undef HAVE_CLOSE

/* Define to 1 if you have the <db.h> header file. */
#undef HAVE_DB_H

/* Define to 1 if you have the declaration of 'getenv', and to 0 if you don't.
   */
#undef HAVE_DECL_GETENV

/* Define to 1 if you have the declaration of 'mach_error_string', and to 0 if
   you don't. */
#undef HAVE_DECL_MACH_ERROR_STRING

/* Define to 1 if you have the <errno.h> header file. */
#undef HAVE_ERRNO_H

/* Define to 1 if you have the <fcntl.h> header file. */
#undef HAVE_FCNTL_H

/* Define to 1 if you have the 'getpagesize' function. */
#undef HAVE_GETPAGESIZE

/* Define to 1 if the system has the type 'intptr_t'. */
#undef HAVE_INTPTR_T

/* Define to 1 if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H

/* Define to 1 if you have the <ipc/ipc_types.h> header file. */
#undef HAVE_IPC_IPC_TYPES_H

/* Define to 1 if the system has the type 'ipc_port_t'. */
#undef HAVE_IPC_PORT_T

/* Define to 1 if you have the 'c' library (-lc). */
#undef HAVE_LIBC

/* Define to 1 if you have the <limits.h> header file. */
#undef HAVE_LIMITS_H

/* Define to 1 if you have the 'lseek' function. */
#undef HAVE_LSEEK

/* Define to 1 if you have the <mach/error.h> header file. */
#undef HAVE_MACH_ERROR_H

/* Define to 1 if you have the 'mach_error_string' function. */
#undef HAVE_MACH_ERROR_STRING

/* Define to 1 if the system has the type 'mach_error_t'. */
#undef HAVE_MACH_ERROR_T

/* Define to 1 if you have the <mach/mach_error.h> header file. */
#undef HAVE_MACH_MACH_ERROR_H

/* Define to 1 if you have the <mach/mach.h> header file. */
#undef HAVE_MACH_MACH_H

/* Define to 1 if you have the <mach/mach_port.h> header file. */
#undef HAVE_MACH_MACH_PORT_H

/* Define to 1 if you have the <mach/mach_vm.h> header file. */
#undef HAVE_MACH_MACH_VM_H

/* Define to 1 if the system has the type 'mach_port_array_t'. */
#undef HAVE_MACH_PORT_ARRAY_T

/* Define to 1 if you have the <mach/port.h> header file. */
#undef HAVE_MACH_PORT_H

/* Define to 1 if the system has the type 'mach_port_t'. */
#undef HAVE_MACH_PORT_T

/* Define to 1 if the system has the type 'mach_port_type_t'. */
#undef HAVE_MACH_PORT_TYPE_T

/* Define to 1 if you have the 'mach_vm_region' function. */
#undef HAVE_MACH_VM_REGION

/* Define to 1 if you have the <mach/vm_region.h> header file. */
#undef HAVE_MACH_VM_REGION_H

/* Define to 1 if your system has a GNU libc compatible 'malloc' function, and
   to 0 otherwise. */
#undef HAVE_MALLOC

/* Define to 1 if you have the 'memmove' function. */
#undef HAVE_MEMMOVE

/* Define to 1 if you have the 'memset' function. */
#undef HAVE_MEMSET

/* Define to 1 if you have a working 'mmap' system call. */
#undef HAVE_MMAP

/* Define to 1 if you have the 'msync' function. */
#undef HAVE_MSYNC

/* Define to 1 if you have the 'munmap' function. */
#undef HAVE_MUNMAP

/* Define to 1 if the system has the type 'port_t'. */
#undef HAVE_PORT_T

/* Define to 1 if your system has a GNU libc compatible 'realloc' function,
   and to 0 otherwise. */
#undef HAVE_REALLOC

/* Define to 1 if you have the 'sbrk' function. */
#undef HAVE_SBRK

/* Define to 1 if you have the <stddef.h> header file. */
#undef HAVE_STDDEF_H

/* Define to 1 if you have the <stdint.h> header file. */
#undef HAVE_STDINT_H

/* Define to 1 if you have the <stdio.h> header file. */
#undef HAVE_STDIO_H

/* Define to 1 if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H

/* Define to 1 if you have the 'strerror' function. */
#undef HAVE_STRERROR

/* Define to 1 if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#undef HAVE_STRING_H

/* Define to 1 if you have the <sys/mman.h> header file. */
#undef HAVE_SYS_MMAN_H

/* Define to 1 if you have the <sys/param.h> header file. */
#undef HAVE_SYS_PARAM_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#undef HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/types.h> header file. */
#undef HAVE_SYS_TYPES_H

/* Define to 1 if the system has the type 'uintptr_t'. */
#undef HAVE_UINTPTR_T

/* Define to 1 if you have the <unistd.h> header file. */
#undef HAVE_UNISTD_H

/* Define to 1 if you have the 'vm_region' function. */
#undef HAVE_VM_REGION

/* Define if getpagesize is not declared in system header files. */
#undef NEED_DECLARATION_GETPAGESIZE

/* Define if sbrk is not declared in system header files. */
#undef NEED_DECLARATION_SBRK

/* Define to the address where bug reports for this package should be sent. */
#undef PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#undef PACKAGE_NAME

/* Define to the full name and version of this package. */
#undef PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#undef PACKAGE_TARNAME

/* Define to the home page for this package. */
#undef PACKAGE_URL

/* Define to the version of this package. */
#undef PACKAGE_VERSION

/* Define to 1 if the C compiler supports function prototypes. */
#undef PROTOTYPES

/* Define to 1 if all of the C89 standard headers exist (not just the ones
   required in a freestanding environment). This macro is provided for
   backward compatibility; new code need not use it. */
#undef STDC_HEADERS

/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most
   significant byte first (like Motorola and SPARC, unlike Intel). */
#if defined AC_APPLE_UNIVERSAL_BUILD
# if defined __BIG_ENDIAN__
#  define WORDS_BIGENDIAN 1
# endif
#else
# ifndef WORDS_BIGENDIAN
#  undef WORDS_BIGENDIAN
# endif
#endif

/* Define for Solaris 2.5.1 so the uint32_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   #define below would cause a syntax error. */
#undef _UINT32_T

/* Define like PROTOTYPES; this can be used by system headers. */
#undef __PROTOTYPES

/* Define to empty if 'const' does not conform to ANSI C. */
#undef const

/* Define to the type of a signed integer type of width exactly 32 bits if
   such a type exists and the standard includes do not define it. */
#undef int32_t

/* Define to the type of a signed integer type wide enough to hold a pointer,
   if such a type exists, and if the system does not define it. */
#undef intptr_t

/* Define to rpl_malloc if the replacement function should be used. */
#undef malloc

/* Define to 'long int' if <sys/types.h> does not define. */
#undef off_t

/* Define to rpl_realloc if the replacement function should be used. */
#undef realloc

/* Define as 'unsigned int' if <stddef.h> doesn't define. */
#undef size_t

/* Define to the type of an unsigned integer type of width exactly 32 bits if
   such a type exists and the standard includes do not define it. */
#undef uint32_t

/* Define to the type of an unsigned integer type wide enough to hold a
   pointer, if such a type exists, and if the system does not define it. */
#undef uintptr_t


#endif /* __CONFIG_H__ */

