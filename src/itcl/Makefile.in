#
# This file is the toplevel Makefile for [incr Tcl].  If it has the
# name "Makefile.in" then it is a template for a Makefile; to generate
# the actual Makefile, run "./configure", which is a configuration
# script generated by the "autoconf" program (constructs like
# "@foo@" will get replaced in the actual Makefile.
#
# RCS: $Id: Makefile.in,v 1.14.148.2 2001/07/11 22:49:12 mdejong Exp $

# Default top-level directories in which to install architecture-
# specific files (exec_prefix) and machine-independent files such
# as scripts (prefix).  The values specified here may be overridden
# at configure-time with the --exec-prefix and --prefix options
# to the "configure" script.

prefix =	@prefix@
exec_prefix =	@exec_prefix@
datarootdir =   @datarootdir@

subdirs =	@subdirs@

# Some versions of make, like SGI's, use the following variable to
# determine which shell to use for executing commands:
SHELL =		/bin/sh

## automake-style verbosity control:
V = @V@
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 =

AM_V_MFLAG = $(am__v_MFLAG_@AM_V@)
am__v_MFLAG_ = $(am__v_MFLAG_@AM_DEFAULT_V@)
am__v_MFLAG_0 = -s
am__v_MFLAG_1 = -w

all:
	$(AM_V_at)for dir in $(subdirs); do \
		if test -d $${dir} && test -r $${dir}/Makefile; then \
		    echo "$${dir}: $(MAKE) $(AM_V_MFLAG) $@"; \
		    if (cd $${dir}; $(MAKE) $(AM_V_MFLAG) $@); then \
		      echo "$(MAKE) $(AM_V_MFLAG) $@ succeeded for $${dir}"; \
		    else echo "`pwd`: $@ failed in $${dir}" && exit 1; fi; \
		else \
		    echo "`pwd`: skipping $@ for $${dir}" && exit 1; \
		fi \
	done;

test check:
	$(AM_V_at)for dir in itcl itk iwidgets; do \
		if test -d $${dir} && test -r $${dir}/Makefile; then \
		    echo "$${dir}: $(MAKE) $(AM_V_MFLAG) $@"; \
		    if (cd $${dir}; $(MAKE) $(AM_V_MFLAG) $@); then \
		      echo "$(MAKE) $(AM_V_MFLAG) $@ succeeded for $${dir}"; \
		    else echo "`pwd`: $@ failed in $${dir}" && exit 1; fi; \
		else \
		    echo "`pwd`: skipping $@ for $${dir}" && exit 1; \
		fi \
	done;

static:
	$(AM_V_at)for dir in $(subdirs); do \
		if test -d $${dir} && test -r $${dir}/Makefile; then \
		    echo "$${dir}: $(MAKE) $(AM_V_MFLAG) $@"; \
		    if (cd $${dir}; $(MAKE) $(AM_V_MFLAG) $@); then \
		      echo "$(MAKE) $(AM_V_MFLAG) $@ succeeded for $${dir}"; \
		    else echo "`pwd`: $@ failed in $${dir}" && exit 1; fi; \
		else \
		    echo "`pwd`: skipping $@ for $${dir}" && exit 1; \
		fi \
	done;

standalone:
	$(AM_V_at)for dir in $(subdirs); do \
		if test -d $${dir} && test -r $${dir}/Makefile; then \
		    echo "$${dir}: $(MAKE) $(AM_V_MFLAG) $@"; \
		    if (cd $${dir}; $(MAKE) $(AM_V_MFLAG) $@); then \
		      echo "$(MAKE) $(AM_V_MFLAG) $@ succeeded for $${dir}"; \
		    else echo "`pwd`: $@ failed in $${dir}" && exit 1; fi; \
		else \
		    echo "`pwd`: skipping $@ for $${dir}" && exit 1; \
		fi \
	done;

plusplus:
	$(AM_V_at)for dir in $(subdirs); do \
		if test -d $${dir} && test -r $${dir}/Makefile; then \
		    echo "$${dir}: $(MAKE) $(AM_V_MFLAG) $@"; \
		    if (cd $${dir}; $(MAKE) $(AM_V_MFLAG) $@); then \
		      echo "$(MAKE) $(AM_V_MFLAG) $@ succeeded for $${dir}"; \
		    else echo "`pwd`: $@ failed in $${dir}" && exit 1; fi; \
		else \
		    echo "`pwd`: skipping $@ for $${dir}" && exit 1; \
		fi \
	done;

install:
	$(AM_V_at)for dir in $(subdirs); do \
		if test -d $${dir} && test -r $${dir}/Makefile; then \
		    echo "$${dir}: $(MAKE) $(AM_V_MFLAG) $@"; \
		    if (cd $${dir}; $(MAKE) $(AM_V_MFLAG) $@); then \
		      echo "$(MAKE) $(AM_V_MFLAG) $@ succeeded for $${dir}"; \
		    else echo "`pwd`: $@ failed in $${dir}" && exit 1; fi; \
		else \
		    echo "`pwd`: skipping $@ for $${dir}" && exit 1; \
		fi \
	done;

install-binaries:
	$(AM_V_at)for dir in $(subdirs); do \
		if test -d $${dir} && test -r $${dir}/Makefile; then \
		    echo "$${dir}: $(MAKE) $(AM_V_MFLAG) $@"; \
		    if (cd $${dir}; $(MAKE) $(AM_V_MFLAG) $@); then \
		      echo "$(MAKE) $(AM_V_MFLAG) $@ succeeded for $${dir}"; \
		    else echo "`pwd`: $@ failed in $${dir}" && exit 1; fi; \
		else \
		    echo "`pwd`: skipping $@ for $${dir}" && exit 1; \
		fi \
	done;

install-libraries:
	$(AM_V_at)for dir in $(subdirs); do \
		if test -d $${dir} && test -r $${dir}/Makefile; then \
		    echo "$${dir}: $(MAKE) $(AM_V_MFLAG) $@"; \
		    if (cd $${dir}; $(MAKE) $(AM_V_MFLAG) $@); then \
		      echo "$(MAKE) $(AM_V_MFLAG) $@ succeeded for $${dir}"; \
		    else echo "`pwd`: $@ failed in $${dir}" && exit 1; fi; \
		else \
		    echo "`pwd`: skipping $@ for $${dir}" && exit 1; \
		fi \
	done;

install-info info install-check:

mostlyclean clean:
	$(AM_V_at)for dir in $(subdirs); do \
		if test -d $${dir} && test -r $${dir}/Makefile; then \
		    echo "$${dir}: $(MAKE) $(AM_V_MFLAG) $@"; \
		    if (cd $${dir}; $(MAKE) $(AM_V_MFLAG) $@); then \
		      echo "$(MAKE) $(AM_V_MFLAG) $@ succeeded for $${dir}"; \
		    else echo "`pwd`: $@ failed in $${dir}" && exit 1; fi; \
		else \
		    echo "`pwd`: skipping $@ for $${dir}" && exit 1; \
		fi \
	done;

distclean:
	rm -fv *~ config/*~
	rm -f Makefile config.log config.status config.cache autoscan.log
	rm -rf autom4te.cache || rmdir autom4te.cache
	$(AM_V_at)for dir in $(subdirs); do \
		if test -d $${dir} && test -r $${dir}/Makefile; then \
		    echo "$${dir}: $(MAKE) $(AM_V_MFLAG) $@"; \
		    if (cd $${dir}; $(MAKE) $(AM_V_MFLAG) $@); then \
		      echo "$(MAKE) $(AM_V_MFLAG) $@ succeeded for $${dir}"; \
		    else echo "`pwd`: $@ failed in $${dir}" && exit 1; fi; \
		else \
		    echo "`pwd`: skipping $@ for $${dir}" && exit 1; \
		fi \
	done;

#
# Target to create a proper Tcl distribution from information in the
# master source directory.  DISTDIR must be defined to indicate where
# to put the distribution.
#

# CYGNUS LOCAL
AUTOCONF = autoconf
cygnus_local_configure: configure.ac
	$(AUTOCONF)
	$(AM_V_at)for dir in $(subdirs); do \
		if (cd $${dir}; $(AUTOCONF)); then \
		  echo "$(AUTOCONF) succeeded for $${dir}"; \
		else echo "`pwd`: $@ failed in $${dir}" && exit 1; fi; \
	done;
.PHONY: cygnus_local_configure

Makefile: config.status
	CONFIG_FILES=Makefile CONFIG_HEADERS="" $(SHELL) ./config.status

config.status: configure
	$(SHELL) config.status --recheck
# END CYGNUS LOCAL

# DO NOT DELETE THIS LINE -- make depend depends on it.
